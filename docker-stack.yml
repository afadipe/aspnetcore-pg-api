version: '3.8'
services:
   Pgdb:
     image: postgres 
     restart: always
     container_name: sleekemployees-Pgdb
     ports:
       - 5432:5432
     networks:
       - sleekPg_appnetwork  
     environment:
       - POSTGRES_USER=postgres 
       - POSTGRES_PASSWORD=AwesomePass_1234
       - POSTGRES_DB=SleekCompanyEmployeePg
     volumes:
       - pgdb-data:/var/lib/postgresql/data/
   pgadmin:
      depends_on:
        - Pgdb
      container_name: pgadmin4_container
      image: dpage/pgadmin4
      restart: always
      environment:
        PGADMIN_DEFAULT_EMAIL: postgres@gmail.com
        PGADMIN_DEFAULT_PASSWORD: AwesomePass_1234
        PGADMIN_LISTEN_PORT: 80
      ports:
        - "8009:80"
      networks:
       - sleekPg_appnetwork  
      volumes:
        - pgadmin-data:/var/lib/pgadmin
   backend:
     depends_on:
       - Pgdb
     image: ${DOCKER_REGISTRY-}sleekcompanyemployeesapipg
     container_name: sleekemployees-APIpg
     build:
       context: .
       dockerfile: Dockerfile
     environment:
       - "ConnectionStrings__DefaultConnection=host=Pgdb;Port=5432;Database=SleekCompanyEmployeePg;User Id=postgres;Password=AwesomePass_1234;"
     ports:
       - 8085:5005
     networks:
       - sleekPg_appnetwork  
     deploy:
       replicas: 2
       update_config:
          parallelism: 1
          delay: 20s
          monitor: 5s
          failure_action: rollback
          max_failure_ratio: 0.75
       restart_policy:
          condition: on-failure
          delay: 10s
          max_attempts: 5
volumes:
  pgdb-data:
    driver: local
  pgadmin-data:
    driver: local
networks:
  sleekPg_appnetwork:
    driver: bridge
